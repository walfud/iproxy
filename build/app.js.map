{"version":3,"sources":["../app.js"],"names":["require","default","x","console","log","setInterval","proxies","saver","proxy","Array","isArray","i","replace","length","push","file","fs","readdirSync","name","path","parse","err","app","Koa","use","root","Router","get","ctx","body","routes","listen"],"mappings":"aAAA,wB;AACA,4B;AACA,0B;AACA,uC;AACA,+C;AACA,uC;;AAEAA,QAAQ,qBAAR,EAA+BC,OAA/B,CAAuCC,KAAKC,QAAQC,GAAR,CAAYF,CAAZ,CAA5C;;AAEA;AACAG,YAAY,YAAY;AACpB;AACA,UAAMC,UAAU,EAAhB;AACA,aAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,YAAI,CAACC,MAAMC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvBA,oBAAQ,CAACA,KAAD,CAAR;AACH;;AAED,aAAK,IAAIG,CAAT,IAAcH,KAAd,EAAqB;AACjB,gBAAIG,KAAKA,EAAEC,OAAF,CAAU,OAAV,EAAmB,EAAnB,EAAuBC,MAAvB,KAAkC,CAAvC,IAA4CF,EAAEC,OAAF,CAAU,OAAV,EAAmB,EAAnB,EAAuBC,MAAvB,KAAkC,CAAlF,EAAqF;AACjFP,wBAAQQ,IAAR,CAAaH,CAAb;AACAR,wBAAQC,GAAR,CAAa,gBAAeO,CAAE,EAA9B;AACH;AACJ;AACJ;AACD,SAAK,IAAII,IAAT,IAAiBC,aAAGC,WAAH,CAAe,WAAf,CAAjB,EAA8C;AAC1Cd,gBAAQC,GAAR,CAAa,oBAAmBW,IAAK,EAArC;;AAEA,cAAM,EAAEG,IAAF,KAAWC,eAAKC,KAAL,CAAWL,IAAX,CAAjB;AACA,YAAI;AACAf,oBAAS,aAAYkB,IAAK,EAA1B,EAA6BjB,OAA7B,CAAqCM,KAArC;AACH,SAFD,CAEE,OAAOc,GAAP,EAAY;AACVlB,oBAAQC,GAAR,CAAYiB,GAAZ;AACH;AACJ;AACJ,CAzBD,EAyBG,KAAK,EAAL,GAAU,IAzBb;;AA2BA;AACA,MAAMC,MAAM,IAAIC,aAAJ,EAAZ;AACAD,IAAIE,GAAJ,CAAQ,0BAAR;AACAF,IAAIE,GAAJ,CAAQ,8BAAR;;AAEA,MAAMC,OAAO,IAAIC,mBAAJ,EAAb;AACAD,KAAKE,GAAL,CAAS,GAAT,EAAcC,OAAO;AACjBA,QAAIC,IAAJ,GAAW,aAAX;AACH,CAFD;;AAIA;AACA,KAAK,IAAId,IAAT,IAAiBC,aAAGC,WAAH,CAAe,UAAf,CAAjB,EAA6C;AACzCd,YAAQC,GAAR,CAAa,mBAAkBW,IAAK,EAApC;;AAEA,UAAM,EAAEG,IAAF,KAAWC,eAAKC,KAAL,CAAWL,IAAX,CAAjB;AACAU,SAAKD,GAAL,CAAU,IAAGN,IAAK,EAAlB,EAAqBlB,QAAS,YAAWkB,IAAK,EAAzB,EAA4BjB,OAA5B,CAAoC6B,MAApC,EAArB;AACH;AACDR,IAAIE,GAAJ,CAAQC,KAAKK,MAAL,EAAR;;AAEAR,IAAIS,MAAJ,CAAW,IAAX;AACA5B,QAAQC,GAAR,CAAa,gBAAb","file":"app.js","sourcesContent":["import fs from 'fs'\r\nimport path from 'path'\r\nimport Koa from 'koa'\r\nimport logger from 'koa-logger'\r\nimport bodyParser from 'koa-bodyparser'\r\nimport Router from 'koa-router'\r\n\r\nrequire('./sniffer/mayidaili').default(x => console.log(x))\r\n\r\n// Sniffer Service\r\nsetInterval(function () {\r\n    // TODO: mongodb\r\n    const proxies = []\r\n    function saver(proxy) {\r\n        if (!Array.isArray(proxy)) {\r\n            proxy = [proxy]\r\n        }\r\n\r\n        for (let i of proxy) {\r\n            if (i && i.replace(/[^.]/g, '').length === 3 && i.replace(/[^:]/g, '').length === 1) {\r\n                proxies.push(i)\r\n                console.log(`proxy added: ${i}`)\r\n            }\r\n        }\r\n    }\r\n    for (let file of fs.readdirSync('./sniffer')) {\r\n        console.log(`loading sniffer: ${file}`)\r\n\r\n        const { name } = path.parse(file)\r\n        try {\r\n            require(`./sniffer/${name}`).default(saver)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}, 60 * 60 * 1000);\r\n\r\n// Server\r\nconst app = new Koa()\r\napp.use(logger())\r\napp.use(bodyParser())\r\n\r\nconst root = new Router()\r\nroot.get('/', ctx => {\r\n    ctx.body = 'Hello World'\r\n})\r\n\r\n// Load all routers\r\nfor (let file of fs.readdirSync('./router')) {\r\n    console.log(`loading module: ${file}`)\r\n\r\n    const { name } = path.parse(file)\r\n    root.use(`/${name}`, require(`./router/${name}`).default.routes())\r\n}\r\napp.use(root.routes())\r\n\r\napp.listen(3000)\r\nconsole.log(`Listen at 3000`)"]}