{"version":3,"sources":["../app.js"],"names":["setInterval","proxies","saver","where","proxy","Array","isArray","i","replace","length","push","console","log","file","fs","readdirSync","name","path","parse","browser","puppeteer","launch","headless","args","page","newPage","require","default","fetch","err","close","app","Koa","use","root","Router","get","ctx","body","routes","listen"],"mappings":"aAAA,wB;AACA,4B;AACA,0B;AACA,uC;AACA,+C;AACA,uC;AACA,sC;AACA,uC;;AAEA;AACAA,YAAY,YAAY;AACpB;AACA,UAAMC,UAAU,EAAhB;AACA,aAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AACzB,YAAI,CAACC,MAAMC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvBA,oBAAQ,CAACA,KAAD,CAAR;AACH;;AAED,aAAK,IAAIG,CAAT,IAAcH,KAAd,EAAqB;AACjB,gBAAIG,KAAKA,EAAEC,OAAF,CAAU,OAAV,EAAmB,EAAnB,EAAuBC,MAAvB,KAAkC,CAAvC,IAA4CF,EAAEC,OAAF,CAAU,OAAV,EAAmB,EAAnB,EAAuBC,MAAvB,KAAkC,CAAlF,EAAqF;AACjFR,wBAAQS,IAAR,CAAaH,CAAb;AACAI,wBAAQC,GAAR,CAAa,GAAET,KAAM,SAAQI,CAAE,EAA/B;AACH;AACJ;AACJ;AACD,SAAK,IAAIM,IAAT,IAAiBC,aAAGC,WAAH,CAAe,WAAf,CAAjB,EAA8C;AAC1CJ,gBAAQC,GAAR,CAAa,oBAAmBC,IAAK,EAArC;;AAEA,cAAM,EAAEG,IAAF,KAAWC,eAAKC,KAAL,CAAWL,IAAX,CAAjB;AACA,SAAC,kBAAkB;AACf,kBAAMM,UAAU,MAAMC,oBAAUC,MAAV,CAAiB;AACnCC,0BAAU,KADyB;AAEnCC,sBAAM,CAAC,cAAD,EAAiB,0BAAjB,CAF6B,EAAjB,CAAtB;;AAIA,gBAAI;AACA,sBAAMC,OAAO,MAAML,QAAQM,OAAR,EAAnB;AACA,sBAAMC,QAAS,aAAYV,IAAK,EAA1B,EAA6BW,OAA7B,CAAqCH,IAArC,EAA2CI,mBAA3C,EAAmDxB,KAAD,IAAWF,MAAMc,IAAN,EAAYZ,KAAZ,CAA7D,CAAN;AACH,aAHD,CAGE,OAAOyB,GAAP,EAAY;AACVlB,wBAAQC,GAAR,CAAYiB,GAAZ;AACH,aALD,SAKU;AACNV,2BAAWA,QAAQW,KAAR,EAAX;AACH;AACJ,SAbD;AAcH;AACJ,CAlCD,EAkCG,KAAK,EAAL,GAAU,IAlCb;;AAoCA;AACA,MAAMC,MAAM,IAAIC,aAAJ,EAAZ;AACAD,IAAIE,GAAJ,CAAQ,0BAAR;AACAF,IAAIE,GAAJ,CAAQ,8BAAR;;AAEA,MAAMC,OAAO,IAAIC,mBAAJ,EAAb;AACAD,KAAKE,GAAL,CAAS,GAAT,EAAcC,OAAO;AACjBA,QAAIC,IAAJ,GAAW,aAAX;AACH,CAFD;;AAIA;AACA,KAAK,IAAIzB,IAAT,IAAiBC,aAAGC,WAAH,CAAe,UAAf,CAAjB,EAA6C;AACzCJ,YAAQC,GAAR,CAAa,mBAAkBC,IAAK,EAApC;;AAEA,UAAM,EAAEG,IAAF,KAAWC,eAAKC,KAAL,CAAWL,IAAX,CAAjB;AACAqB,SAAKD,GAAL,CAAU,IAAGjB,IAAK,EAAlB,EAAqBU,QAAS,YAAWV,IAAK,EAAzB,EAA4BW,OAA5B,CAAoCY,MAApC,EAArB;AACH;AACDR,IAAIE,GAAJ,CAAQC,KAAKK,MAAL,EAAR;;AAEAR,IAAIS,MAAJ,CAAW,IAAX;AACA7B,QAAQC,GAAR,CAAa,gBAAb","file":"app.js","sourcesContent":["import fs from 'fs'\r\nimport path from 'path'\r\nimport Koa from 'koa'\r\nimport logger from 'koa-logger'\r\nimport bodyParser from 'koa-bodyparser'\r\nimport Router from 'koa-router'\r\nimport puppeteer from 'puppeteer'\r\nimport fetch from 'node-fetch'\r\n\r\n// Sniffer Service\r\nsetInterval(function () {\r\n    // TODO: mongodb\r\n    const proxies = []\r\n    function saver(where, proxy) {\r\n        if (!Array.isArray(proxy)) {\r\n            proxy = [proxy]\r\n        }\r\n\r\n        for (let i of proxy) {\r\n            if (i && i.replace(/[^.]/g, '').length === 3 && i.replace(/[^:]/g, '').length === 1) {\r\n                proxies.push(i)\r\n                console.log(`${where} add: ${i}`)\r\n            }\r\n        }\r\n    }\r\n    for (let file of fs.readdirSync('./sniffer')) {\r\n        console.log(`loading sniffer: ${file}`)\r\n\r\n        const { name } = path.parse(file);\r\n        (async function () {\r\n            const browser = await puppeteer.launch({\r\n                headless: false,\r\n                args: ['--no-sandbox', '--disable-setuid-sandbox']\r\n            })\r\n            try {\r\n                const page = await browser.newPage()\r\n                await require(`./sniffer/${name}`).default(page, fetch, (proxy) => saver(name, proxy))\r\n            } catch (err) {\r\n                console.log(err)\r\n            } finally {\r\n                browser && browser.close()\r\n            }\r\n        })()\r\n    }\r\n}, 10 * 60 * 1000);\r\n\r\n// Server\r\nconst app = new Koa()\r\napp.use(logger())\r\napp.use(bodyParser())\r\n\r\nconst root = new Router()\r\nroot.get('/', ctx => {\r\n    ctx.body = 'Hello World'\r\n})\r\n\r\n// Load all routers\r\nfor (let file of fs.readdirSync('./router')) {\r\n    console.log(`loading module: ${file}`)\r\n\r\n    const { name } = path.parse(file)\r\n    root.use(`/${name}`, require(`./router/${name}`).default.routes())\r\n}\r\napp.use(root.routes())\r\n\r\napp.listen(3000)\r\nconsole.log(`Listen at 3000`)"]}